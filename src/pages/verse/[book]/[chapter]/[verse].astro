---
import Layout from "../../../../layouts/Layout.astro";
import booksProprety from "../../../../../data/books.json";
const { book, chapter, verse } = Astro.params;

const bookString = parseInt(book);
let bookType = "";
let oneTrans = "";
let twoTrans = "";
let originalText = "";
let hideNextButton = "false";
let typeOfWriting = ""
if (bookString < 40) {
    const NKJVReq = await fetch(
        `https://bolls.life/get-verse/NKJV/${book}/${chapter}/${verse}/`,
    );

    const NKJVJson = await NKJVReq.json();
    oneTrans = NKJVJson.text;
    console.log(NKJVJson.text);

    const LSVReq = await fetch(
        `https://bolls.life/get-verse/LSV/${book}/${chapter}/${verse}/`,
    );
    const LSVJson = await LSVReq.json();
    twoTrans = LSVJson.text;

    const WLCReq = await fetch(
        `https://bolls.life/get-verse/WLC/${book}/${chapter}/${verse}/`,
    );
    const WLCJson = await WLCReq.json();
    originalText = WLCJson.text;
    console.log(WLCJson.text);
    bookType = "OT";
}

if (bookString < 67 && bookString >= 40) {
    const NKJVReq = await fetch(
        `https://bolls.life/get-verse/NKJV/${book}/${chapter}/${verse}/`,
    );
    const NKJVJson = await NKJVReq.json();
    oneTrans = NKJVJson.text;

    const LSVReq = await fetch(
        `https://bolls.life/get-verse/LSV/${book}/${chapter}/${verse}/`,
    );
    const LSVJson = await LSVReq.json();
    twoTrans = LSVJson.text;

    const NTGTReq = await fetch(
        `https://bolls.life/get-verse/NTGT/${book}/${chapter}/${verse}/`,
    );
    const NTGTJson = await NTGTReq.json();
    originalText = NTGTJson.text;
    bookType = "NT";
    console.log(bookType);
}

if (bookString > 67) {
    const WEBReq = await fetch(
        `https://bolls.life/get-verse/WEB/${book}/${chapter}/${verse}/`,
    );

    const WEBJson = await WEBReq.json();
    oneTrans = WEBJson.text;

    const LXXEReq = await fetch(
        `https://bolls.life/get-verse/LXXE/${book}/${chapter}/${verse}/`,
    );
    const LXXEJson = await LXXEReq.json();
    twoTrans = LXXEJson.text;

    const LXXReq = await fetch(
        `https://bolls.life/get-verse/LXX/${book}/${chapter}/${verse}/`,
    );
    const LXXJson = await LXXReq.json();

    originalText = LXXJson.text;
    bookType = "SEPT";
}

if (parseInt(book) > 39 && parseInt(book) < 44) {
    typeOfWriting = "Gospel according to "
} else if (parseInt(book) > 44 && parseInt(book) < 65 || parseInt(book) == 72) {
    typeOfWriting = "Epistle"
} else if ([22, 70, 79, 81, 82, 83].includes(parseInt(book))) {
    typeOfWriting = "the"
} else {
    typeOfWriting = "Book of"
}

async function followingVerseValue() {
    const nextVerseUrl = `/${book}/${chapter}/${(parseInt(verse) + 1).toString}/`;
    const firstResponse = await fetch(
        "https://bolls.life/get-verse/WEB" + nextVerseUrl,
    );
    if (firstResponse.status !== 404) {
        return "/verse" + nextVerseUrl;
    } else {
        const nextChapterUrl = `/${book}/${(parseInt(chapter) + 1).toString}/1/`;
        const secondResponse = await fetch(
            "https://bolls.life/get-verse/WEB" + nextChapterUrl,
        );
        if (secondResponse.status !== 404) {
            return "/verse" + nextChapterUrl;
        } else {
            const nextBookUrl = `/${book}/${(parseInt(chapter) + 1).toString}/1/`;
            const thirdResponse = await fetch(
                "https://bolls.life/get-verse/WEB" + nextBookUrl,
            );
            if (thirdResponse.status !== 404) {
                return "/verse" + nextBookUrl;
            } else {
                hideNextButton = "true";
                return "";
            }
        }
    }
}


function getBookNameById(books, bookId) {
    const book = books.find((b) => b.bookid == bookId);
    return book ? book.name : null; // Returns the name or null if not found
}

const title = getBookNameById(booksProprety, book);
---

<Layout>
    <main>
        <div style="flex: 1;">
            <div
                style="display: flex; align-items: center; justify-content:center;"
            >
                <div class="bubble">
                    <p>From the {typeOfWriting} {title}, Chapter {chapter}:{verse}</p>
                </div>
            </div>
            <h2></h2>
            <div class="bubble">
                <p dir={bookType == "OT" ? "rtl" : "ltr"}> {originalText}</p>
            </div>
        </div>
        <div style="flex: 1;">
            <h2 style="text-align: center;">Translations</h2>

            <h2>
                {
                    bookType == "OT" || bookType == "NT"
                        ? "New King James Version"
                        : "Common English Bible"
                }
            </h2>
            <p class="bubble">{oneTrans}</p>
            <h2>
                {
                    bookType == "OT" || bookType == "NT"
                        ? "Literal Standard Version"
                        : "English Version of the Septuagint"
                }
            </h2>
            <p class="bubble">{twoTrans}</p>
        </div>
    </main>

    <style>
        main {
            display: flex;
            gap: 20px;
        }

        @media (max-width: 600px) {
            /* Adjust width for your needs */
            main {
                flex-direction: column; /* Stack items vertically on smaller screens */
                align-items: center; /* Center items horizontally */
            }
        }
        @font-face {
            font-family: "LXX";
            src: url("/fonts/KoineGreek.ttf") format("ttf");
            font-weight: normal;
            font-style: normal;
            font-display: swap;
        }
        @font-face {
            font-family: "WLCa";
            src: url("/fonts/Hebrew.ttf") format("ttf");
            font-weight: normal;
            font-style: normal;
            font-display: swap;
        }

        .bubble {
            padding: 20px;
            border-radius: 25px;
            background-color: #283034;
        }

    </style>
</Layout>
